================================================================================
GIT Homework 1
Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub
Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.
Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash
Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.
================================================================================
JSON
4. Создать внешний репозиторий c названием JSON: Draga929=>Repositories=>New=>JSON=>Add a README file=>Create repository
5. Клонировать репозиторий JSON на локальный компьютер: JSON=>Code=>Copy=>HTTPS=>https://github.com/Draga929/JSON.git
$ git clone https://github.com/Draga929/JSON.git
6. Внутри локального JSON создать файл “new.json”: 
$ cd JSON
$ touch new.json
7. Добавить файл под гит: $ git add new.json
8. Закоммитить файл: $ git commit -m "add new.json file"
9. Отправить файл на внешний GitHub репозиторий: $ git push
10. Отредактировать содержание файла “new.json” - написать информацию о себе
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON:
$ vim new.json
{
        "Name":"Ivan",
        "Surname":"Bublikov",
        "Patronymic":"Olegovich",
        "Number of pets":1,
        "Future desired salary":480000
}
11. Отправить изменения на внешний репозиторий: 
$ git commit -am "added information about yourself"
$ git push
12. Создать файл preferences.json: $ touch preferences.json
13. В файл preferences.json добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON:
$ vim preferences.json
{
        "Favorite movie":"Man on Fire (2004)",
        "Favorite TV series":"True Detective (season 1)",
        "Favorite food":"Barbecue",
        "Favorite time of the year":"Autumn",
        "The country you would like to visit":"United Arab Emirates"
}
14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON:
$ touch sklls.json
$ vim sklls.json
{
        "skils1":"HTTP Server Request Methods",
        "skils2":"Testing the API via Postman",
        "skils3":"Load testing in Jmeter",
        "skils4":"Scrum Development Methodology",
        "skils5":"Postgres database"
}
15. Отправить сразу 2 файла на внешний репозиторий:
$ git add .
$ git commit -m "add two file"
$ git push
16. На веб интерфейсе создать файл bug_report.json: add file=>create new file=>bug_report.json
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе:Commit new file=>"Create bug_report.json"=>
=>Commit directly to the main branch.=>Commit new file
18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON:
Draga929/JSON/bug_report.json=>Edit this file
{
  "ID":"Идентификационный номер бага",
  "Title or Summary":"Заголовок,краткое описание.Раздел,который кратко передает суть бага одним предложением.Отвечает на вопросы Что?,Где?,При каких обстоятельствах?",
  "Project":"Название проекта,сайта,программы или приложения, в котором выявлен баг",
  "Enviroment":
  {
    "OS":"Операционная система содержащая баг",
    "Browser":"Браузер содержащий баг"
  },
  "Component": "Название части или функции тестируемого продукта",
  "Build": "Номер сборки проекта",
  "Steps to Reproduce":"Шаги воспроизведения.Точная последовательность действий,которая приводит к тому,чтобы воспроизвести баг",
  "Actual result":"Фактический результат.К чему приводит воспроизведение шагов,как сейчас работает программа",
  "Expected result":"Ожидаемый результат.Как должна работать программа на самом деле и к чему должны приводить действия, описанные в пункте'Шаги к воспроизведению'",
  "Severity": "Серьезность.Параметр,определяющий влияние бага на работу программы по шкале S0 до S4",
  "Priority": "Приоритет.Параметр, определяющий срочность исправления бага по шкале от P1 до P3",
  "Status": "Определяется в зависимости от того, на какой стадии находится баг:открыт,в работе,исправлен,отклонен,отсрочен и т.д.",
  "Author": "Автор бага",
  "Attachments": "Ссылка на картинку или видео с багом"
}
19. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Commit changes=>"Update bug_report.json"=>
=>Commit directly to the main branch.=>Commit changes
20. Синхронизировать внешний и локальный репозиторий JSON: $ git pull
==================================================================
XML
21. Создать внешний репозиторий c названием XML:=>Draga929=>Repositories=>New=>XML=>Add a README file=>Create repository
22. Клонировать репозиторий XML на локальный компьютер:XML=>Code=>Copy=>HTTPS=> Clone https://github.com/Draga929/XML.git
$ cd ..
$ git clone https://github.com/Draga929/XML.git
23. Внутри локального XML создать файл “new.xml”:$ touch new.xml
24. Добавить файл под гит:$ git add new.xml
25. Закоммитить файл:$ git commit -m "add new.xml file"
26. Отправить файл на внешний GitHub репозиторий:$ git push
27. Отредактировать содержание файла “new.xml” - написать информацию о себе
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML:
$ vim new.xml
        <Name>"Ivan"</Name>
        <Surname>"Bublikov"</Surname>
        <Patronymic>"Olegovich"</Olegovich>
        <Number of pets>1</Number of pets>
        <Future desired salary>480000</Future desired salary>
28. Отправить изменения на внешний репозиторий:
$ git commit -am "added information about yourself"
$ git push
29. Создать файл preferences.xml:$ touch preferences.xml
30. В файл preferences.xml добавить информацию о своих предпочтениях
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML:
$ vim preferences.xml
        <Favorite movie>"Man on Fire (2004)"</Favorite movie>
        <Favorite TV series>"True Detective (season 1)"</Favorite TV series>
        <Favorite food>"Barbecue"</Favorite food>
        <Favorite time of the year>"Autumn"</Favorite time of the year>
        <The country you would like to visit>"United Arab Emirates"</The country you would like to visit>
31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML:
$ touch sklls.xml
$ vim sklls.xml
        <skils1>"HTTP Server Request Methods"</skils1>
        <skils2>"Testing the API via Postman"</skils2>
        <skils3>"Load testing in Jmeter"</skils3>
        <skils4>"Scrum Development Methodology"</skils4>
        <skils5>"Postgres database"</skils5>
32. Сделать коммит в одну строку:$ git add . && git commit -m "add two file"
33. Отправить сразу 2 файла на внешний репозиторий:$ git push
34. На веб интерфейсе создать файл bug_report.xml:add file=>create new file=>bug_report.xml
35. Сделать Commit changes (сохранить) изменения на веб интерфейсе:Commit new file=>"Create bug_report.xml"=>
=>Commit directly to the main branch.=>Commit new file
36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML:
Draga929/JSON/bug_report.xml=>Edit this file
  <ID>"Идентификационный номер бага"</ID>
  <Title or Summary>"Заголовок,краткое описание.Раздел,который кратко передает суть бага одним предложением.Отвечает на вопросы Что?,Где?,При каких обстоятельствах?" </Title or Summary>
  <Project>"Название проекта,сайта,программы или приложения, в котором выявлен баг"</Project>
  <Enviroment>
    <OS>"Операционная система содержащая баг"</OS>
    <Browser>"Браузер содержащий баг"</Browser>
  </Enviroment>
  <Component>"Название части или функции тестируемого продукта"</Component>
  <Build>"Номер сборки проекта"</Build>
  <Steps to Reproduce>"Шаги воспроизведения.Точная последовательность действий,которая приводит к тому,чтобы воспроизвести баг"</Steps to Reproduce>
  <Actual result>"Фактический результат.К чему приводит воспроизведение шагов,как сейчас работает программа"</Actual result>
  <Expected result>"Ожидаемый результат.Как должна работать программа на самом деле и к чему должны приводить действия, описанные в пункте'Шаги к воспроизведению'"</Expected result>
  <Severity>"Серьезность.Параметр,определяющий влияние бага на работу программы по шкале S0 до S4"</Severity>
  <Priority>"Приоритет.Параметр, определяющий срочность исправления бага по шкале от P1 до P3"</Priority>
  <Status>"Определяется в зависимости от того, на какой стадии находится баг:открыт,в работе,исправлен,отклонен,отсрочен и т.д."</Status>
  <Author>"Автор бага"</Author>
  <Attachments>"Ссылка на картинку или видео с багом"</Attachments>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе:Commit changes=>"Update bug_report.xml"=>
=>Commit directly to the main branch.=>Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML: git pull
==========================================================================================================================================
TXT
1. Создать внешний репозиторий c названием TXT:=>Draga929=>Repositories=>New=>TXT=>Add a README file=>Create repository
2. Клонировать репозиторий TXT на локальный компьютер:TXT=>Code=>Copy=>HTTPS=> Clone https://github.com/Draga929/TXT.git
$ cd ..
$ git clone https://github.com/Draga929/TXT.git
3. Внутри локального TXT создать файл “new.txt”:$ touch new.txt
4. Добавить файл под гит:$ git add new.txt
5. Закоммитить файл:$ git commit -m "add new.txt file"
6. Отправить файл на внешний GitHub репозиторий:$ git push
7. Отредактировать содержание файла “new.txt” - написать информацию о себе
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT:
$ vim new.txt
1. Name - Ivan
2. Surname - Bublikov
3. Patronymic - Olegovich
4. Number of pets - 1
5. Future desired salary - 480000
================================
8. Отправить изменения на внешний репозиторий:
$ git commit -am "added information about yourself"
$ git push
9. Создать файл preferences.txt:$ touch preferences.txt
10. В файл preferences.txt” добавить информацию о своих предпочтениях
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT:
$ vim preferences.txt
1. Favorite movie - Man on Fire (2004)
2. Favorite TV series - True Detective (season 1)
3. Favorite food - Barbecue
4. Favorite time of the year - Autumn
5. The country you would like to visit - United Arab Emirates
==================================================
11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT:
$ touch sklls.txt
$ vim sklls.txt
1. skils 1 - HTTP Server Request Methods
2. skils 2 - Testing the API via Postman
3. skils3 - Load testing in Jmeter
4. skils4 - Scrum Development Methodology
5. skils5 - Postgres database
=====================================
12. Сделать коммит в одну строку:$ git add . && git commit -m "add two file"
13. Отправить сразу 2 файла на внешний репозиторий:$ git push
14. На веб интерфейсе создать файл bug_report.txt:add file=>create new file=>
15. Сделать Commit changes (сохранить) изменения на веб интерфейсе:Commit new file=>"Create bug_report.txt"=>
=>Commit directly to the main branch.=>Commit new file
16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT:
Draga929/JSON/bug_report.txt=>Edit this file
1. ID - Идентификационный номер бага
2. Title or Summary - Заголовок,краткое описание.Раздел,который кратко передает суть бага одним предложением.Отвечает на вопросы Что?,Где?,При каких обстоятельствах?
3. Project - Название проекта,сайта,программы или приложения, в котором выявлен баг
4. Enviroment:
    4.1. OS - Операционная система содержащая баг
    4.2. Browser - Браузер содержащий баг
5. Component - Название части или функции тестируемого продукта
6. Build - Номер сборки проекта
7. Steps to Reproduce - Шаги воспроизведения.Точная последовательность действий,которая приводит к тому,чтобы воспроизвести баг
8. Actual result - Фактический результат.К чему приводит воспроизведение шагов,как сейчас работает программа
9. Expected result - Ожидаемый результат.Как должна работать программа на самом деле и к чему должны приводить действия, описанные в пункте'Шаги к воспроизведению'
10. Severity - Серьезность.Параметр,определяющий влияние бага на работу программы по шкале S0 до S4
11. Priority - Приоритет.Параметр, определяющий срочность исправления бага по шкале от P1 до P3
12. Status - Определяется в зависимости от того, на какой стадии находится баг:открыт,в работе,исправлен,отклонен,отсрочен и т.д.
13. Author - Автор бага
14. Attachments - Ссылка на картинку или видео с багом
==================================================
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе:Commit changes=>"Update bug_report.txt"=>
=>Commit directly to the main branch.=>Commit changes
18. Синхронизировать внешний и локальный репозиторий TXT: git pull
================================================================
THE END
